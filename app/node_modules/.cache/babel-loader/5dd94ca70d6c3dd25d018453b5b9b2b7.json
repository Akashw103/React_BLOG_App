{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshay\\\\Desktop\\\\New folder\\\\Blog-app\\\\my-app\\\\src\\\\components\\\\auth\\\\AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport AuthToken from './tokenAuth';\nimport { REGISTER_USER, LOAD_USER, LOGIN_USER, LOGOUT, REGISTRATION_FAILED, LOGIN_FAILED, AUTH_ERROR } from './action';\n\nconst UserAuth = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n  /** Load User Account**/\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      AuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: LOAD_USER,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n  /*Register user*/\n\n\n  const registeruser = async FormData => {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('api/users', FormData, config);\n      dispatch({\n        type: REGISTER_USER,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTRATION_FAILED,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      registeruser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default UserAuth;","map":{"version":3,"sources":["C:/Users/Akshay/Desktop/New folder/Blog-app/my-app/src/components/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","AuthToken","REGISTER_USER","LOAD_USER","LOGIN_USER","LOGOUT","REGISTRATION_FAILED","LOGIN_FAILED","AUTH_ERROR","UserAuth","props","initialState","token","localStorage","getItem","isAuthenticated","user","loading","error","state","dispatch","loadUser","res","get","type","payload","data","err","registeruser","FormData","config","header","post","response","msg","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SACIC,aADJ,EAEIC,SAFJ,EAGIC,UAHJ,EAIIC,MAJJ,EAKIC,mBALJ,EAMIC,YANJ,EAOIC,UAPJ,QAQO,UARP;;AAWA,MAAMC,QAAQ,GAAGC,KAAK,IAAG;AACrB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,eAAe,EAAC,IAFC;AAGjBC,IAAAA,IAAI,EAAC,IAHY;AAIjBC,IAAAA,OAAO,EAAC,IAJS;AAKjBC,IAAAA,KAAK,EAAC;AALW,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAApC;AACD;;AAEA,QAAMU,QAAQ,GAAG,YAAW;AACxB,QAAGR,YAAY,CAACD,KAAhB,EAAsB;AAClBX,MAAAA,SAAS,CAACY,YAAY,CAACD,KAAd,CAAT;AACH;;AACD,QAAG;AACF,YAAMU,GAAG,GAAE,MAAMxB,KAAK,CAACyB,GAAN,CAAU,WAAV,CAAjB;AACAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAACrB,SADA;AAELsB,QAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,OAAD,CAAR;AAIAL,MAAAA,QAAQ;AAER,KARD,CAQC,OAAMM,GAAN,EAAU;AACVP,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEhB;AAAP,OAAD,CAAR;AACA;AACJ,GAfD;AAmBC;;;AACA,QAAMoB,YAAY,GAAG,MAAMC,QAAN,IAAiB;AAClC,UAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAC;AACH,wBAAgB;AADb;AADI,KAAf;;AAKA,QAAG;AACC,YAAMT,GAAG,GAAG,MAAMxB,KAAK,CAACkC,IAAN,CAAW,WAAX,EAAuBH,QAAvB,EAAiCC,MAAjC,CAAlB;AACAV,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEtB,aADD;AAELuB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAKH,KAPD,CAOC,OAAMC,GAAN,EAAU;AACPP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAClB,mBADA;AAELmB,QAAAA,OAAO,EAACE,GAAG,CAACM,QAAJ,CAAaP,IAAb,CAAkBQ;AAFrB,OAAD,CAAR;AAIH;AACJ,GAnBD;;AAoBA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBtB,MAAAA,KAAK,EAACO,KAAK,CAACP,KADa;AAEzBG,MAAAA,eAAe,EAACI,KAAK,CAACJ,eAFG;AAGzBE,MAAAA,OAAO,EAACE,KAAK,CAACF,OAHW;AAIzBD,MAAAA,IAAI,EAACG,KAAK,CAACH,IAJc;AAKzBE,MAAAA,KAAK,EAACC,KAAK,CAACD,KALa;AAMzBU,MAAAA;AANyB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKlB,KAAK,CAACyB,QARX,CADJ;AAaH,CAjED;;AAkEA,eAAe1B,QAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport axios from 'axios'\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport AuthToken from './tokenAuth';\nimport {\n    REGISTER_USER,\n    LOAD_USER,\n    LOGIN_USER,\n    LOGOUT ,\n    REGISTRATION_FAILED ,\n    LOGIN_FAILED ,\n    AUTH_ERROR\n} from './action';\n\n\nconst UserAuth = props =>{\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated:null,\n        user:null,\n        loading:true,\n        error:null, \n        \n    }\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n   /** Load User Account**/\n\n   const loadUser = async () =>{\n       if(localStorage.token){\n           AuthToken(localStorage.token);\n       }\n       try{\n        const res= await axios.get('/api/auth');\n        dispatch({\n            type:LOAD_USER,\n            payload:res.data\n        });\n        loadUser();\n\n       }catch(err){\n        dispatch({type: AUTH_ERROR})\n       }\n   }\n  \n   \n   \n    /*Register user*/\n    const registeruser = async FormData =>{\n        const config = {\n            header:{\n                'Content-Type': 'application/json'\n            }\n        };\n        try{\n            const res = await axios.post('api/users',FormData, config);\n            dispatch({\n                type: REGISTER_USER,\n                payload: res.data\n            });\n\n        }catch(err){\n            dispatch({\n                type:REGISTRATION_FAILED,\n                payload:err.response.data.msg\n            });\n        }\n    }\n    return(\n        <AuthContext.Provider value={{\n            token:state.token,\n            isAuthenticated:state.isAuthenticated,\n            loading:state.loading,\n            user:state.user,\n            error:state.error,\n            registeruser\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n           \n    );\n};\nexport default UserAuth;"]},"metadata":{},"sourceType":"module"}